import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load a sample dataset (you should replace this with your own dataset)
# For simplicity, I'll use a dictionary to represent data
data = {
    'CarAge': [3, 5, 7, 2, 10, 1],
    'Mileage': [30000, 50000, 70000, 20000, 100000, 10000],
    'Price': [25000, 20000, 15000, 28000, 12000, 32000]
}

df = pd.DataFrame(data)

# Split the data into features (X) and the target variable (y)
X = df[['CarAge', 'Mileage']]
y = df['Price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
lr_model = LinearRegression()

# Train the model on the training data
lr_model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = lr_model.predict(X_test)

# Calculate Mean Squared Error and R-squared (coefficient of determination)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)
